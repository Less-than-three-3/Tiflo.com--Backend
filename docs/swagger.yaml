basePath: /
definitions:
  handler.ProjectUpdate:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  model.AudioPart:
    properties:
      duration:
        type: integer
      partId:
        type: string
      path:
        type: string
      projectId:
        type: string
      start:
        type: integer
      text:
        type: string
    type: object
  model.Comment:
    properties:
      splitPoint:
        type: string
      text:
        type: string
    type: object
  model.Image:
    properties:
      name:
        type: string
    type: object
  model.Project:
    properties:
      audioParts:
        items:
          $ref: '#/definitions/model.AudioPart'
        type: array
      name:
        type: string
      path:
        type: string
      projectId:
        type: string
      userId:
        type: string
    required:
    - name
    - path
    - projectId
    - userId
    type: object
  model.UserLogin:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
  model.VoiceText:
    properties:
      text:
        type: string
    type: object
host: tiflo.tech
info:
  contact: {}
  description: App for working with audio descriptions(tiflocomments)
  title: Tiflo_Backend
  version: "1.0"
paths:
  /api/auth/logout:
    post:
      consumes:
      - application/json
      description: Logs out the user by blacklisting the access token
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      summary: Logout
      tags:
      - Authentication
  /api/auth/signIn:
    post:
      consumes:
      - application/json
      description: Authenticates a user and generates an access token
      parameters:
      - description: User information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: User sign-in
      tags:
      - Authentication
  /api/auth/signUp:
    post:
      consumes:
      - application/json
      description: Creates a new user account
      parameters:
      - description: User login and password
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserLogin'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema: {}
        "409":
          description: Conflict
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Sign up a new user
      tags:
      - Authentication
  /api/projects/:
    get:
      description: Get all user' projects as an array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.Project'
            type: array
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get all user' projects info
      tags:
      - Project
    post:
      description: Create a  new project with default name
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create new user project
      tags:
      - Project
  /api/projects/{projectId}:
    delete:
      description: Delete project
      parameters:
      - description: Project Id
        in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Delete project
      tags:
      - Project
    get:
      description: Get project name, path to media and audio parts
      parameters:
      - description: Project Id
        in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get project info
      tags:
      - Project
    patch:
      consumes:
      - application/json
      description: rename project
      parameters:
      - description: New project name
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.ProjectUpdate'
      - description: Project Id
        in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update project name
      tags:
      - Project
  /api/projects/{projectId}/audio:
    post:
      description: Get path for audio file got from all audio parts
      parameters:
      - description: Project Id
        in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Get final audio
      tags:
      - Audio
  /api/projects/{projectId}/audio-part/{audioPartId}:
    delete:
      description: Delete audio part
      parameters:
      - description: Project Id
        in: path
        name: projectId
        required: true
        type: string
      - description: Audio part Id
        in: path
        name: audioPartId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Delete audio part
      tags:
      - Audio part
    put:
      consumes:
      - application/json
      description: Change text comment for chosen audio part
      parameters:
      - description: Project Id
        in: path
        name: projectId
        required: true
        type: string
      - description: Audio part Id
        in: path
        name: audioPartId
        required: true
        type: string
      - description: New text for comment
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/model.Comment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Change text comment
      tags:
      - Audio part
  /api/projects/{projectId}/image/comment:
    post:
      consumes:
      - application/json
      description: Create tiflo comment for given image
      parameters:
      - description: name of image(uuid)
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.Image'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create tiflo comment
      tags:
      - Comment
  /api/projects/{projectId}/media:
    post:
      consumes:
      - multipart/form-data
      description: Uploads a media file to the server
      parameters:
      - description: Media file to upload
        in: formData
        name: file
        required: true
        type: file
      - description: Project Id
        in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Successfully uploaded
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Failed to save file
          schema:
            additionalProperties: true
            type: object
      summary: Upload media file for project
      tags:
      - Project
  /api/projects/{projectId}/video/comment:
    post:
      consumes:
      - application/json
      description: Create comment on video using split point
      parameters:
      - description: Project Id
        in: path
        name: projectId
        required: true
        type: string
      - description: Split point
        in: body
        name: comment
        required: true
        schema:
          $ref: '#/definitions/model.Comment'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create comment on video
      tags:
      - Comment
  /api/projects/{projectId}/voice:
    post:
      consumes:
      - application/json
      description: Voice the given text
      parameters:
      - description: text which you want to be voiced
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.VoiceText'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Voice the given text
      tags:
      - Project
schemes:
- http
- https
swagger: "2.0"
