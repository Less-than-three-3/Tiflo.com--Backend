basePath: /
definitions:
  handler.ProjectUpdate:
    properties:
      name:
        type: string
    required:
    - name
    type: object
  model.Project:
    properties:
      name:
        type: string
      path:
        type: string
      projectId:
        type: string
      userId:
        type: string
    required:
    - name
    - path
    - projectId
    - userId
    type: object
  model.UserLogin:
    properties:
      login:
        type: string
      password:
        type: string
    required:
    - login
    - password
    type: object
host: localhost:8080
info:
  contact: {}
  description: App for working with audio descriptions(tiflocomments)
  title: Tiflo_Backend
  version: "1.0"
paths:
  /api/auth/logout:
    post:
      consumes:
      - application/json
      description: Logs out the user by blacklisting the access token
      produces:
      - application/json
      responses:
        "200":
          description: OK
        "400":
          description: Bad Request
      summary: Logout
      tags:
      - Authentication
  /api/auth/signIn:
    post:
      consumes:
      - application/json
      description: Authenticates a user and generates an access token
      parameters:
      - description: User information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: User sign-in
      tags:
      - Authentication
  /api/auth/signUp:
    post:
      consumes:
      - application/json
      description: Creates a new user account
      parameters:
      - description: User login and password
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/model.UserLogin'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema: {}
        "409":
          description: Conflict
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Sign up a new user
      tags:
      - Authentication
  /api/projects/:
    post:
      description: Create a  new project with default name
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Project'
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Create new user project
      tags:
      - Project
  /api/projects/{projectId}:
    patch:
      consumes:
      - application/json
      description: rename project
      parameters:
      - description: New project name
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handler.ProjectUpdate'
      - description: Project Id
        in: path
        name: projectId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema: {}
        "401":
          description: Unauthorized
          schema: {}
        "500":
          description: Internal Server Error
          schema: {}
      summary: Update project name
      tags:
      - Project
schemes:
- http
swagger: "2.0"
