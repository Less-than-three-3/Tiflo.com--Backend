version: "3.8"
services:
  backend:
    container_name: tiflo_backend
    depends_on:
      postgres:
        condition: service_started
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ${CONFIG}:/configs
      - ${MEDIA}:/media
    restart: always

  postgres:
    env_file:
      - .env
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      -  ${PG_DATA}:/var/lib/postgresql/data
      - ./db/init.sql:/docker-entrypoint-initdb.d/initdb.sql
    restart: always

  redis:
    env_file:
      - .env
    image: redis:6.2-alpine
    container_name: redis
    restart: always
    command: redis-server --save 20 1 --loglevel warning --requirepass ${REDIS_PASSWORD}
    volumes:
      - ${REDIS_DATA}:/data

  nginx:
    image: nginx:latest
    container_name: nginx
    restart: always
    ports:
      - '443:443'
      - '80:80'
    volumes:
      - ${FRONT_BUILD}:/dist
      - ${FRONT_REPO}:/icons/src/assets
      - /etc/letsencrypt:/etc/letsencrypt
      - ${CERTBOT}:/var/www/certbot/:ro
      - ${NGINX_LOGS}:/var/log/nginx
      - ${NGINX_CONF}:/etc/nginx/nginx.conf
      - ${MEDIA}:/media


image2text:
    container_name: img2seq_server
    build:
      context: ~/ml-image/Tiflo.com--ML/image2text
      dockerfile: Dockerfile
    command: python img_server.py
    volumes:
      - ~/ml-image/Tiflo.com--ML/image2text:/app
      - ~/frontend/public/media:/data
    ports:
      - 8090:8080

  text2voice:
    container_name: model
    build:
      context: ~/ml
      dockerfile: docker/Dockerfile
    command: python server.py
    volumes:
      - ~/ml:/app
    ports:
      - 8081:8080
